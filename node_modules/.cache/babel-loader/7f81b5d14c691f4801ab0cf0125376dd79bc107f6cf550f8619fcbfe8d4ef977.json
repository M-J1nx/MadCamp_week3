{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mj183\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\MadCampWeek3\\\\MadCamp_week3_front\\\\src\\\\components\\\\Result.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { fetchApiData } from './SummaryAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Result() {\n  _s();\n  const [postData, setPostData] = useState([]);\n  const [resultData, setResultData] = useState([]);\n  const APIurl = 'https://naveropenapi.apigw.ntruss.com/text-summary/v1/summarize';\n  const handleGetData = async () => {\n    try {\n      const response = await (await axios.get(`http://43.202.79.6:3001/result?paperId=2`)).data;\n      const extractedBodies = response.map(item => item.body);\n      const finalBody = extractedBodies.join('\\n');\n      setPostData(finalBody);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const handleGetResultData = async () => {\n    try {\n      // Use the content from Naver API\n      const naverApiResponse = await fetchApiData();\n      setResultData(naverApiResponse);\n\n      // Assuming your Python backend returns the summarized data\n      const result = naverApiResponse.data;\n      setResultData(result);\n    } catch (error) {\n      console.error('Error fetching result data: ', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD3EC\\uC2A4\\uD2B8 \\uACB0\\uACFC \\uC885\\uD569\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGetData,\n      children: \"\\uB0B4 \\uC790\\uB8CC \\uAC00\\uC838\\uC624\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGetResultData,\n      children: \"\\uD55C \\uC904 \\uC694\\uC57D \\uBCF4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), postData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC11C\\uBC84\\uC5D0\\uC11C \\uBC1B\\uC544\\uC628 \\uB370\\uC774\\uD130:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(postData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), resultData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC11C\\uBC84 \\uB370\\uC774\\uD130 \\uD55C \\uC904 \\uC694\\uC57D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(resultData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Result, \"9qqPr8oqKiMMm/FH6r+6X8GsDvE=\");\n_c = Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["React","useState","axios","fetchApiData","jsxDEV","_jsxDEV","Result","_s","postData","setPostData","resultData","setResultData","APIurl","handleGetData","response","get","data","extractedBodies","map","item","body","finalBody","join","error","console","handleGetResultData","naverApiResponse","result","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/mj183/OneDrive/바탕 화면/MadCampWeek3/MadCamp_week3_front/src/components/Result.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { fetchApiData } from './SummaryAPI';\r\n\r\nexport default function Result() {\r\n    const [postData, setPostData] = useState([]);\r\n    const [resultData, setResultData] = useState([]);\r\n    const APIurl = 'https://naveropenapi.apigw.ntruss.com/text-summary/v1/summarize'\r\n\r\n    const handleGetData = async () => {\r\n        try {\r\n            const response = await (await axios.get(`http://43.202.79.6:3001/result?paperId=2`)).data;\r\n            const extractedBodies = response.map(item => item.body);\r\n            const finalBody = extractedBodies.join('\\n');\r\n            setPostData(finalBody);\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        }\r\n    };\r\n\r\n    const handleGetResultData = async () => {\r\n        try {\r\n            // Use the content from Naver API\r\n            const naverApiResponse = await fetchApiData();\r\n            setResultData(naverApiResponse)\r\n\r\n            // Assuming your Python backend returns the summarized data\r\n            const result = naverApiResponse.data;\r\n\r\n            setResultData(result);\r\n        } catch (error) {\r\n            console.error('Error fetching result data: ', error);\r\n        }\r\n    };\r\n\r\n  return (\r\n    <div>\r\n      <h2>포스트 결과 종합</h2>\r\n      <button onClick={handleGetData}>내 자료 가져오기</button>\r\n      <button onClick={handleGetResultData}>한 줄 요약 보기</button>\r\n      \r\n      {/* 받아온 데이터를 출력 */}\r\n      {postData && (\r\n        <div>\r\n          <h3>서버에서 받아온 데이터:</h3>\r\n          <pre>{JSON.stringify(postData, null, 2)}</pre>\r\n        </div>\r\n      )}\r\n\r\n      {resultData && (\r\n        <div>\r\n            <h3>서버 데이터 한 줄 요약</h3>\r\n            <pre>{JSON.stringify(resultData, null, 2)}</pre>\r\n        </div>\r\n      )}\r\n\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}