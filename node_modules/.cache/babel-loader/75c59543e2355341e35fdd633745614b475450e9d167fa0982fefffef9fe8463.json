{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mj183\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\MadCampWeek3\\\\MadCamp_week3_front\\\\src\\\\components\\\\Signup.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from 'axios';\nimport './Memo.css';\nimport { ToastMessage } from \"./ToastMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Signup() {\n  _s();\n  const [id, setId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [nickname, setPassword2] = useState(\"\");\n  const [downloadToast, setDownloadToast] = useState(false);\n  function activeToast() {\n    setDownloadToast(true);\n    let timer = setTimeout(() => {\n      setDownloadToast(false);\n    }, 2000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginitem\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"inputbar\",\n            type: \"text\",\n            placeholder: \"\\uC544\\uC774\\uB514\",\n            onChange: event => {\n              setId(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"inputbar\",\n            type: \"password\",\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n            onChange: event => {\n              setPassword(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"inputbar\",\n            type: \"text\",\n            placeholder: \"\\uB2C9\\uB124\\uC784\",\n            onChange: event => {\n              setPassword2(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              marginRight: \"12px\"\n            },\n            className: \"btn\",\n            onClick: () => {\n              {/* 통신 부분.... */}\n              {/* 이거도 db에 아이디 있는지 확인하고 토스트 해야 함... 로그인이랑 반대...*/}\n              axios.post(\"http://43.202.79.6:3001/signup\", {\n                userId: id,\n                userPw: password,\n                userName: nickname\n              }).then(function (response) {\n                const {\n                  message\n                } = response.data;\n                if (message == 'true') {\n                  console.log(\"200\", message);\n                  window.location.href = \"/login\";\n                } else {\n                  console.log(\"200\", message);\n                  activeToast();\n                }\n              }).catch(function (error) {\n                console.log(error);\n              });\n            },\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: () => {\n              window.location.href = \"/login\";\n            },\n            children: \"\\uB85C\\uADF8\\uC778 \\uD654\\uBA74\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), downloadToast && /*#__PURE__*/_jsxDEV(ToastMessage, {\n        text: \"이미 존재하는 아이디입니다.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Signup, \"hxjdLXgEEZDidEmGbZbpWDIERk0=\");\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["useState","axios","ToastMessage","jsxDEV","_jsxDEV","Signup","_s","id","setId","password","setPassword","nickname","setPassword2","downloadToast","setDownloadToast","activeToast","timer","setTimeout","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","event","target","value","style","marginRight","onClick","post","userId","userPw","userName","then","response","message","data","console","log","window","location","href","catch","error","text","_c","$RefreshReg$"],"sources":["C:/Users/mj183/OneDrive/바탕 화면/MadCampWeek3/MadCamp_week3_front/src/components/Signup.js"],"sourcesContent":["import { useState } from \"react\"\r\nimport axios from 'axios'\r\nimport './Memo.css';\r\nimport { ToastMessage } from \"./ToastMessage\";\r\n\r\nfunction Signup() {\r\n    const [id, setId] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [nickname, setPassword2] = useState(\"\");\r\n    const [downloadToast, setDownloadToast] = useState(false);\r\n    function activeToast() {\r\n      setDownloadToast(true);\r\n      let timer = setTimeout(() => {\r\n        setDownloadToast(false);\r\n      }, 2000);\r\n      return () => {\r\n        clearTimeout(timer);\r\n      };\r\n    }\r\n  \r\n    return (\r\n    <div className=\"login\">\r\n      <div className=\"loginitem\">\r\n        <h2>회원가입</h2>\r\n    \r\n        <div>\r\n          <p><input className=\"inputbar\" type=\"text\" placeholder=\"아이디\" onChange={event => {\r\n            setId(event.target.value);\r\n          }} /></p>\r\n          <p><input className=\"inputbar\" type=\"password\" placeholder=\"비밀번호\" onChange={event => {\r\n            setPassword(event.target.value);\r\n          }} /></p>\r\n          <p><input className=\"inputbar\" type=\"text\" placeholder=\"닉네임\" onChange={event => {\r\n            setPassword2(event.target.value);\r\n          }} /></p>\r\n\r\n          <p><button style={{marginRight: \"12px\"}}className=\"btn\" onClick={() => {\r\n            {/* 통신 부분.... */}\r\n            {/* 이거도 db에 아이디 있는지 확인하고 토스트 해야 함... 로그인이랑 반대...*/}\r\n            axios.post(\"http://43.202.79.6:3001/signup\", {\r\n                  userId: id,\r\n                  userPw: password,\r\n                  userName: nickname\r\n              })\r\n              .then(function (response) {\r\n\r\n                  const {message} = response.data;\r\n                  if (message == 'true') {\r\n                    console.log(\"200\", message);\r\n                    window.location.href = \"/login\"\r\n                  } else {\r\n                    console.log(\"200\", message);\r\n                    activeToast();\r\n                  }\r\n                  \r\n              }).catch(function (error) {\r\n                  console.log(error);\r\n              })\r\n          }} >회원가입</button>\r\n          <button className=\"btn\" onClick={() => {\r\n          window.location.href = \"/login\"\r\n        }}>로그인 화면</button></p>\r\n        </div>\r\n        {downloadToast && <ToastMessage text={\"이미 존재하는 아이디입니다.\"} />}\r\n\r\n        \r\n      </div>\r\n      \r\n    </div> );\r\n  }\r\n\r\n\r\nexport default Signup;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}