{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mj183\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\MadCampWeek3\\\\MadCamp_week3_front\\\\src\\\\components\\\\All.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\n\n//get으로 paperID 받아서 이걸로 게시물들 눌렀을 때 각자의 롤페 페이지로 이동.\n//useEffect가 컴포넌트로 넘어왔을 때 실행되는 건데, 이걸로 papaerID 받아오는 거 하면 될 듯.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function All() {\n  _s();\n  const [lst, setlst] = useState([]);\n  const getlst = async () => {\n    const res = await (await axios.get('http://43.202.79.6:3001/all')).data;\n    setlst(res);\n  };\n  useEffect(() => {\n    getlst();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"\\uC804\\uCCB4 \\uAC8C\\uC2DC\\uD310\\uC785\\uB2C8\\uB2E4. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 20\n    }, this), \"\\uB354\\uBBF8 \\uB370\\uC774\\uD130\\uB85C \\uAC8C\\uC2DC\\uD310 \\uB9CC\\uB4E4\\uC5B4\\uBCF4\\uAE30...\", lst.map(paper => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/roll/${paper.paperId}`,\n        children: [\"\\uAC8C\\uC2DC\\uBB3C\\uB4E4\", paper.paperId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)\n    }, paper.paperId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this);\n}\n_s(All, \"doDvkhREOwvSP/2rVaEknmTStoE=\");\n_c = All;\nvar _c;\n$RefreshReg$(_c, \"All\");","map":{"version":3,"names":["axios","Link","React","useEffect","useState","jsxDEV","_jsxDEV","All","_s","lst","setlst","getlst","res","get","data","children","fileName","_jsxFileName","lineNumber","columnNumber","map","paper","to","paperId","_c","$RefreshReg$"],"sources":["C:/Users/mj183/OneDrive/바탕 화면/MadCampWeek3/MadCamp_week3_front/src/components/All.js"],"sourcesContent":["import axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport React, {useEffect, useState} from 'react';\r\n\r\n//get으로 paperID 받아서 이걸로 게시물들 눌렀을 때 각자의 롤페 페이지로 이동.\r\n//useEffect가 컴포넌트로 넘어왔을 때 실행되는 건데, 이걸로 papaerID 받아오는 거 하면 될 듯.\r\n\r\nexport default function All() {\r\n  const [lst, setlst] = useState([]);\r\n  const getlst = async () => {\r\n    const res = await (await axios.get('http://43.202.79.6:3001/all')).data;\r\n    setlst(res)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getlst();\r\n  });\r\n    return (\r\n      \r\n      <div>\r\n        \r\n        전체 게시판입니다. <br/>\r\n        더미 데이터로 게시판 만들어보기...\r\n        {lst.map((paper)=>(\r\n          <li key={paper.paperId}>\r\n            <Link to={`/roll/${paper.paperId}`}>게시물들{paper.paperId}</Link>\r\n          </li>\r\n        ))}\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;;AAEhD;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAMO,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,MAAMC,GAAG,GAAG,MAAM,CAAC,MAAMZ,KAAK,CAACa,GAAG,CAAC,6BAA6B,CAAC,EAAEC,IAAI;IACvEJ,MAAM,CAACE,GAAG,CAAC;EACb,CAAC;EAEDT,SAAS,CAAC,MAAM;IACdQ,MAAM,CAAC,CAAC;EACV,CAAC,CAAC;EACA,oBAEEL,OAAA;IAAAS,QAAA,GAAK,qDAEQ,eAAAT,OAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,8FAEhB,EAACV,GAAG,CAACW,GAAG,CAAEC,KAAK,iBACbf,OAAA;MAAAS,QAAA,eACET,OAAA,CAACL,IAAI;QAACqB,EAAE,EAAG,SAAQD,KAAK,CAACE,OAAQ,EAAE;QAAAR,QAAA,GAAC,0BAAI,EAACM,KAAK,CAACE,OAAO;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC,GADvDE,KAAK,CAACE,OAAO;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAElB,CACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEV;AAACX,EAAA,CAxBqBD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}