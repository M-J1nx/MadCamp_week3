{"ast":null,"code":"import axios from 'axios';\nconst fetch = require('node-fetch');\nconst client_id = \"mdyy1cdvly\";\nconst client_secret = \"32GVEkD8L7xwRoaMnRgGnLbTVZJ87tyo7M6Blt46\";\nconst url = 'https://naveropenapi.apigw.ntruss.com/text-summary/v1/summarize';\nconst headers = {\n  'Accept': 'application/json;UTF-8',\n  'Content-Type': 'application/json;UTF-8',\n  'X-NCP-APIGW-API-KEY-ID': client_id,\n  'X-NCP-APIGW-API-KEY': client_secret\n};\nconst fetchData = async finalBody => {\n  try {\n    const data = {\n      document: {\n        content: finalBody\n      },\n      option: {\n        language: \"ko\",\n        model: \"news\",\n        tone: 2,\n        summaryCount: 3\n      }\n    };\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify(data)\n    });\n    const rescode = response.status;\n    const result = await response.json();\n    if (rescode === 200) {\n      console.log(result);\n    } else {\n      console.log(\"Error: \", result);\n    }\n  } catch (error) {\n    console.error('Error fetching data:', error);\n  }\n};\nexport { fetchData };","map":{"version":3,"names":["axios","fetch","require","client_id","client_secret","url","headers","fetchData","finalBody","data","document","content","option","language","model","tone","summaryCount","response","method","body","JSON","stringify","rescode","status","result","json","console","log","error"],"sources":["C:/Users/mj183/OneDrive/바탕 화면/MadCampWeek3/MadCamp_week3_front/src/components/SummaryAPI.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst fetch = require('node-fetch');\r\n\r\nconst client_id = \"mdyy1cdvly\";\r\nconst client_secret = \"32GVEkD8L7xwRoaMnRgGnLbTVZJ87tyo7M6Blt46\";\r\nconst url = 'https://naveropenapi.apigw.ntruss.com/text-summary/v1/summarize';\r\n\r\nconst headers = {\r\n  'Accept': 'application/json;UTF-8',\r\n  'Content-Type': 'application/json;UTF-8',\r\n  'X-NCP-APIGW-API-KEY-ID': client_id,\r\n  'X-NCP-APIGW-API-KEY': client_secret\r\n};\r\n\r\nconst fetchData = async (finalBody) => {\r\n    try {\r\n      const data = {\r\n        document: {\r\n          content: finalBody,\r\n        },\r\n        option: {\r\n          language: \"ko\",\r\n          model: \"news\",\r\n          tone: 2,\r\n          summaryCount: 3,\r\n        },\r\n      };\r\n  \r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: headers,\r\n        body: JSON.stringify(data),\r\n      });\r\n  \r\n      const rescode = response.status;\r\n      const result = await response.json();\r\n  \r\n      if (rescode === 200) {\r\n        console.log(result);\r\n      } else {\r\n        console.log(\"Error: \", result);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  };\r\n  \r\n  export { fetchData };\r\n  \r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,KAAK,GAAGC,OAAO,CAAC,YAAY,CAAC;AAEnC,MAAMC,SAAS,GAAG,YAAY;AAC9B,MAAMC,aAAa,GAAG,0CAA0C;AAChE,MAAMC,GAAG,GAAG,iEAAiE;AAE7E,MAAMC,OAAO,GAAG;EACd,QAAQ,EAAE,wBAAwB;EAClC,cAAc,EAAE,wBAAwB;EACxC,wBAAwB,EAAEH,SAAS;EACnC,qBAAqB,EAAEC;AACzB,CAAC;AAED,MAAMG,SAAS,GAAG,MAAOC,SAAS,IAAK;EACnC,IAAI;IACF,MAAMC,IAAI,GAAG;MACXC,QAAQ,EAAE;QACRC,OAAO,EAAEH;MACX,CAAC;MACDI,MAAM,EAAE;QACNC,QAAQ,EAAE,IAAI;QACdC,KAAK,EAAE,MAAM;QACbC,IAAI,EAAE,CAAC;QACPC,YAAY,EAAE;MAChB;IACF,CAAC;IAED,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACI,GAAG,EAAE;MAChCa,MAAM,EAAE,MAAM;MACdZ,OAAO,EAAEA,OAAO;MAChBa,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,IAAI;IAC3B,CAAC,CAAC;IAEF,MAAMa,OAAO,GAAGL,QAAQ,CAACM,MAAM;IAC/B,MAAMC,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAEpC,IAAIH,OAAO,KAAK,GAAG,EAAE;MACnBI,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;IACrB,CAAC,MAAM;MACLE,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,MAAM,CAAC;IAChC;EACF,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;EAC9C;AACF,CAAC;AAED,SAASrB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}