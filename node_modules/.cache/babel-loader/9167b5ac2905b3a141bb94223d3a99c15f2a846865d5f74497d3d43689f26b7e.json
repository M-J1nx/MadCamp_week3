{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mj183\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\MadCampWeek3\\\\MadCamp_week3_front\\\\src\\\\components\\\\Roll.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Memo from './Memo';\nimport './Memo.css';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport WriteMemo from './WriteMemo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Roll() {\n  _s();\n  const {\n    idx\n  } = useParams(); //이거가 인덱스(paperid 가져오는 거...)\n  //이거는 서버에서 메모지 정보 가져오는 걸로 바꿔야 함..\n  //타이틀은 메모 적은 사람 닉네임, 내용은 그냥 내용 가져오기...\n  //get 함수로 가져와야 할 듯.\n  const [lst, setlst] = useState([]);\n  const getlst = async () => {\n    const res = await (await axios.get(`http://43.202.79.6:3001/getpost?paperId=${idx}`)).data;\n    setlst(res);\n  };\n  useEffect(() => {\n    getlst();\n  });\n\n  //nickname이 고정이 안됨.\n  //서버에서 받아와야 할 듯?\n  //paperid 있으니까...\n  //\n  //롤페 메모지는 반응형인데 사진은 어케함..?\n\n  const [nickname, setnickname] = useState(\"\");\n  useEffect(() => {\n    console.log(idx);\n    axios.get(`http://43.202.79.6:3001/getname?paperId=${idx}`).then(function (response) {\n      const {\n        userName\n      } = response.data[0];\n      console.log(userName);\n      setnickname(userName);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  const [ispopup, setispopup] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [nickname, \"\\uC758 \\uB864\\uB9C1\\uD398\\uC774\\uD37C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uB098\\uC758 \\uB864\\uB9C1\\uD398\\uC774\\uD37C\\uB97C \\uB9CC\\uB4DC\\uB294 \\uACF3. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 28\n      }, this), \"\\uBB54\\uAC00 \\uC0AC\\uB78C\\uB4E4\\uC774 \\uBA54\\uBAA8 \\uBD99\\uC774\\uB294 \\uB3D9\\uC791\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 28\n      }, this), \"\\uBB54\\uAC00 \\uBD84\\uC11D\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper grid\",\n      children: lst.map(post => /*#__PURE__*/_jsxDEV(Memo, {\n        postTitle: post.userName,\n        postDetail: post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"\\uACB0\\uACFC \\uB9CC\\uB4E4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setispopup(true);\n      },\n      children: \"\\uBA54\\uBAA8 \\uC4F0\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(WriteMemo, {\n      isOpen: ispopup,\n      onClose: () => setispopup(false),\n      paperId: idx\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this);\n}\n_s(Roll, \"lnDvN+LtO7/jxO3kLp9kCVsCJsU=\", false, function () {\n  return [useParams];\n});\n_c = Roll;\nvar _c;\n$RefreshReg$(_c, \"Roll\");","map":{"version":3,"names":["useState","useEffect","Memo","useParams","axios","WriteMemo","jsxDEV","_jsxDEV","Roll","_s","idx","lst","setlst","getlst","res","get","data","nickname","setnickname","console","log","then","response","userName","catch","error","ispopup","setispopup","style","marginLeft","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","post","postTitle","postDetail","body","onClick","isOpen","onClose","paperId","_c","$RefreshReg$"],"sources":["C:/Users/mj183/OneDrive/바탕 화면/MadCampWeek3/MadCamp_week3_front/src/components/Roll.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport Memo from './Memo';\r\nimport './Memo.css'\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios'\r\nimport WriteMemo from './WriteMemo';\r\n\r\nexport default function Roll() {\r\n  const {idx} = useParams();//이거가 인덱스(paperid 가져오는 거...)\r\n  //이거는 서버에서 메모지 정보 가져오는 걸로 바꿔야 함..\r\n  //타이틀은 메모 적은 사람 닉네임, 내용은 그냥 내용 가져오기...\r\n  //get 함수로 가져와야 할 듯.\r\n  const [lst, setlst] = useState([]);\r\n  const getlst = async () => {\r\n    const res = await (await axios.get(`http://43.202.79.6:3001/getpost?paperId=${idx}`)).data;\r\n    setlst(res)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getlst();\r\n  });\r\n  \r\n  \r\n  //nickname이 고정이 안됨.\r\n  //서버에서 받아와야 할 듯?\r\n  //paperid 있으니까...\r\n  //\r\n  //롤페 메모지는 반응형인데 사진은 어케함..?\r\n  \r\n  \r\n  const [nickname, setnickname] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    console.log(idx)\r\n    axios.get(`http://43.202.79.6:3001/getname?paperId=${idx}`)\r\n    .then(function (response) {\r\n      const {userName} = response.data[0]\r\n      console.log(userName)\r\n      setnickname(userName)\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error)\r\n    })  \r\n    },[]);\r\n\r\n  const [ispopup, setispopup] = useState(false)\r\n\r\n    return (\r\n      <div style={{marginLeft:\"20px\"}}>\r\n        <div>\r\n          <h2>{nickname}의 롤링페이퍼</h2>\r\n        </div>\r\n        \r\n        <p>\r\n          나의 롤링페이퍼를 만드는 곳. <br/>\r\n          뭔가 사람들이 메모 붙이는 동작<br/>\r\n          뭔가 분석\r\n        </p>\r\n        \r\n\r\n        <div className='wrapper grid'>\r\n          {lst.map((post)=>(\r\n            <Memo postTitle = {post.userName} postDetail = {post.body} />\r\n          ))}\r\n        </div>\r\n\r\n        <button>결과 만들기</button> {/* 이거가 요약 해주는 버튼... */}\r\n        <button onClick={()=>{\r\n\r\n          setispopup(true)\r\n\r\n        }}>메모 쓰기</button>\r\n        <WriteMemo isOpen={ispopup} onClose={()=>setispopup(false)} paperId={idx}/>\r\n\r\n        {/* 메모 쓰기 했을 때 롤페처럼 서버랑 연결해서 인덱스 만들기\r\n        여기서 롤페 내용 적기... textarea \r\n        다 적으면 서버에 또 저장... \r\n        이거를 위에 lst 대신에 서버에서 메모지 받아오는 걸로 바꾸기...*/}\r\n        \r\n\r\n        \r\n      </div>\r\n    );\r\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}